#!/bin/bash
set -e

export BRIDGE_IP="$(ip ro | awk '/^default/{print $3}')"

readonly IMAGE="${IMAGE:-docker-consul}"
readonly EXPECT="${EXPECT:-1}"

get-extip() {
	local tmp="$(mktemp)"
	docker run --rm --net=host ubuntu:14.04.1 ip ro > $tmp
	local dev="$(cat $tmp | awk '/^default/{print $4 " " $5}')" # "dev em1"
	local dev_line="$(cat $TMP | grep -v '^default' | grep $dev)"
	local dev_ip="$(echo $dev_line | sed 's/^.* src \([0-9.]*\).*$/\1/')"
	echo $dev_ip
}

cmd-genrun() {
	local ip_def="$1"; shift
	local args="$@"

	declare external_ip join_ip run_mode client_flag server_flag

	ip_def="$(echo $ip_def | sed 's/^:://')"
	IFS=':' read external_ip join_ip client_flag <<< "${ip_def//::/:}"

	if [[ -z "$external_ip" ]]; then
		external_ip="$(get-extip)"
		if [[ -z "$external_ip" ]]; then
			echo "echo 'Could not identify external IP, binding to localhost' #"
			exit 1
		fi
	fi

	if [[ -z "$join_ip" ]]; then
		run_mode="-bootstrap-expect $EXPECT"
	else
		run_mode="-join $join_ip"
	fi

	if [[ -z "$client_flag" ]]; then
		server_flag="-server -ui-dir /ui"
	fi

	if [[ -z "$VOL" ]]; then
		vol_flag="-v $VOL:/data"
	fi

	cat <<EOF
eval docker run --name consul -h \$HOSTNAME \
	-p 0.0.0.0:8300:8300 \
	-p 0.0.0.0:8301:8301 \
	-p 0.0.0.0:8301:8301/udp \
	-p 0.0.0.0:8302:8302 \
	-p 0.0.0.0:8302:8302/udp \
	-p 0.0.0.0:8400:8400 \
	-p 0.0.0.0:8500:8500 \
	-p $BRIDGE_IP:53:53/udp \
	--name consul \
	-v /var/run/docker.sock:/var/run/docker.sock \
	$args $vol_flag \
	$IMAGE $server_flag -advertise $external_ip $run_mode
EOF
}

main() {
	set -eo pipefail
	case "$1" in
	cmd:run) {
		shift; cmd-genrun $@
	};;
	*) {
		./prep-consul.sh
		exec /usr/bin/consul agent -config-dir=. $@
	};;
	esac
}

main "$@"
